@model IEnumerable<Octopus.Models.Producto>

@{
    ViewData["Title"] = "Index";
}

<input hidden id="pageType" name="Productos" />


<div class="jumbotron">
    <p>
        <a class="btn btn-outline-primary" onclick="showModal(this)" id="" name="Create">Nuevo Elemento</a>
    </p>
    <table class="table table-striped table responsive table-dark" style="margin-left:0px !important">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Stock)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Ventas)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Codigo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Hastags)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </th>
              
                <th>
                    @Html.DisplayNameFor(model => model.PType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Grupo)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Stock)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Ventas)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Codigo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Hastags)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                  
                    <td>
                        @Html.DisplayFor(modelItem => item.PType.TypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Grupo.GroupName)
                    </td>
                    <td>
                        <a class="btn btn-outline-warning" onclick="showModal(this)" name="Edit" id="@item.Id">Editar</a> | |
                        <a class="btn btn-outline-danger" onclick="showModal(this)" id="@item.Id" name="Delete">Eliminar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript">

    function validarData(val) {
        var notImages = false;
        //var formData = $("#AjaxForm").serializeArray();

        var data = new FormData($("#AjaxForm")[0]);
       // alert("value" + data);

        showDetailsModal("POST", '@Url.Action("Create", "Productos")', data, false,false,false,false);
    }
    function validarImage(val) {
         var data = new FormData($("#AjaxForm")[0]);
        var notImages = false;

      
       // alert("value" + data);

        var Url = '@Url.Action("action", "controller")';
        var replacetUrl = Url.replace('action', "Create").replace('controller', val);
        showDetailsModal("POST", replacetUrl, data, false, false, notImages,notImages);
    }
    
    function AddImage(val) {
        var typePage = document.getElementById("pageType").name;
        var id = val.id;
        var name = val.name;
       // alert("values" + id + name + typePage);
        showDetailsModal("GET", "@Url.Action("Create", "Images")", { id: id, typeElem: name }, false);
            }

</script>
}